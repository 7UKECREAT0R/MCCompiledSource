{"version":1.19,"extension":"mcc","misc":{"ignoreCase":false,"allowCommentFolding":true,"allowCompactFolding":false},"syntax":{"rangeDelimiter":"..","invertDelimiter":"!","stringDelimiters":["\"","'"],"bracketOpen":"[","bracketClose":"]","blockOpen":"{","blockClose":"}","escape":"\\","comments":{"line":"//","open":"/*","close":"*/"},"numberPrefixes":["~","^","!",".."],"numberSuffixes":["h","m","s","t"]},"keywords":{"operators":{"formatting":{"style":"NONE","color":{"red":224,"green":193,"blue":255}},"<":null,">":null,"{":null,"}":null,"=":null,"(":null,")":null,"+":null,"-":null,"*":null,"/":null,"%":null,"!":null},"selectors":{"formatting":{"style":"BOLD","color":{"red":255,"green":79,"blue":79}},"@e":"References all entities in the world.","@a":"References all players in the world.","@s":"References the executing entity/player.","@p":"References the nearest player.","@r":"References a random entity."},"preprocessor":{"formatting":{"style":"NONE","color":{"red":11,"green":164,"blue":221}},"$add":"Adds two preprocessor variables/values together, changing only the first one. A += B","$append":"Adds the given item(s) to the end of the given preprocessor variable, or contents of another preprocessor variable if specified.","$assert":"Asserts that the input comparison is true, and throws a compiler error if not.","$call":"Calls a function by name and passes in the given parameters. Because this is a preprocessor operation, it has the same error handling as a normal function call.","$dec":"Decrements the given preprocessor variable by one. If multiple values are held, they are all decremented.","$div":"Divides two preprocessor variables/values from each other, changing only the first one. A /= B","$else":"Directly inverts the result of the last $if call at this level in scope.","$if":"Compares a preprocessor variable and another value/variable. If the source variable contains multiple values, they all must match the condition.","$inc":"Increments the given preprocessor variable by one. If multiple values are held, they are all incremented.","$include":"Places the contents of the given file in replacement for this statement. Not intended for production use yet.","$iterate":"Runs the following statement/code-block once for each value in the given preprocessor variable. The current iteration is held in the preprocessor variable given. If the target is a JSON array, the elements will be iterated upon.","$json":"Load a JSON file (if not previously loaded) and retrieve a value from it, storing said value in a preprocessor variable.","$len":"If a preprocessor variable identifier or JSON array is specified, the number of elements it holds is gotten. If a string is given, its length is gotten.","$log":"Sends a message to stdout with a line terminator at the end.","$macro":"If a code-block follows this call, it is treated as a definition. Arguments are passed in as preprocessor variables. If no code-block follows this call, it will attempt to run the macro with any inputs parameters copied to their respective preprocessor variables.","$mean":"Averages all values in the given preprocessor variable together into one value and stores it in a result variable.","$median":"Gets the middle value/average of the two middle values and stores it in a result variable.","$mod":"Divides two preprocessor variables/values from each other, setting only the first one to the remainder of the operation. A %= B","$mul":"Multiplies two preprocessor variables/values together, changing only the first one. A *= B","$pow":"Exponentiates two preprocessor variables/values with each other, changing only the first one. A = A^B","$prepend":"Adds the given item(s) to the start of the given preprocessor variable.","$repeat":"Repeats the following statement/code-block a number of times. If a variable identifier is given, that variable will be set to the index of the current iteration. 0, 1, 2, etc.","$reverse":"Reverses the order of the values in the given preprocessor variable.","$sort":"Sorts the order of the values in the given preprocessor variable either 'ascending' or 'descending'. Values must be comparable.","$strfriendly":"Convert the given preprocessor variable value(s) to a string in 'Title Case'.","$strlower":"Convert the given preprocessor variable value(s) to a string in 'lowercase'.","$strupper":"Convert the given preprocessor variable value(s) to a string in 'UPPERCASE'.","$sub":"Subtracts two preprocessor variables/values from each other, changing only the first one. A -= B","$sum":"Adds all values in the given preprocessor variable together into one value and stores it in a result variable.","$swap":"Swaps the values of two preprocessor variables","$unique":"Flattens the given preprocessor array to only unique values.","$var":"Sets a preprocessor variable to the value(s) provided."},"commands":{"formatting":{"style":"NONE","color":{"red":238,"green":91,"blue":175}},"actionbar":"Displays an actionbar on the screen of the executing player, or to the given one if specified.","assert":"Asserts that the given condition evaluates to true, at runtime. If the condition evaluates to false, the code is halted and info is displayed to the executing player(s).","await":"Works in async functions. Awaits a certain amount of time, for a condition to be met, or another async function to complete executing.","clear":"Clears the inventories of all given entities, optionally searching for a specific item and limiting the number of items to remove.","damage":"Damages the given entities with a certain cause, optionally coming from a position or blaming an entity by a selector, \"name:type\" of entity, or name of another managed entity (e.g., dummy entities).","define":"Defines a variable with a name and type, defaulting to int if unspecified. Can be assigned a value directly after defining.","dialogue":"If followed by a block, defines a new dialogue scene with the given name.","dummy":"Create a dummy entity, remove the selected ones, or manage the classes on the selected ones. Requires feature 'DUMMIES' to be enabled.","effect":"Gives the given entities a potion effect. Time and amplifier can be specified to further customize the potion effect. All potion effects can be cleared using 'effect \\<selector\\> clear'.","else":"Inverts the comparison given by the previous if-statement at this scope level.","execute":"Begins a vanilla Minecraft execute chain. Can be followed by a statement or code-block, but does not explicitly support the 'run' subcommand.","explode":"Create an explosion at a specific position with optional positioning, power, delay, fire, and block breaking settings. Requires feature 'EXPLODERS' to be enabled.","face":"Faces the given entities towards a specific position, selector, \"name:type\" of entity, or name of another managed entity (e.g., dummy entities).","lookat":"Alias of 'face'. Faces the given entities towards a specific position, selector, \"name:type\" of entity, or name of another managed entity (e.g., dummy entities).","feature":"Enables a feature to be used for this project, generating any of the necessary files.","fill":"Fills blocks in a specific region, optionally using a replace mode.","for":"Runs the following statement or code-block once over every entity that matches a selector at its current position. Functionally equivalent to `execute as <selector> at @s run <code>`","function":"Defines a function. Must be followed by a code-block. Parameters must have types, optionally having default values. Function calls look like this: `functionName(parameters)`","fn":"Alias of 'function'. Defines a function. Must be followed by a code-block. Parameters must have types, optionally having default values. Function calls look like this: `functionName(parameters)`","give":"Gives item(s) to the given entity. Runs either a 'give' or 'structure load' depending on requirements. Utilizes builder fields.","globalactionbar":"Displays an actionbar on the screen of all players in the game. Can also be used to set the timings of the actionbar.","globalprint":"Prints a chat message to all players in the game.","globaltitle":"Displays a title on the screen of all players in the game. Can also be used to set the timings of the title.","halt":"Ends the execution of the code entirely by hitting the function command limit.","if":"Performs a comparison, only running the proceeding statement/code-block if the comparisons(s) are true. Multiple comparisons can be chained using the keyword 'and', and comparisons can be inverted using the keyword 'not'","init":"Ensures this variable has a value, defaulting to 0 if not. This ensures the executing entity(s) function as intended all the time. Use clarifiers to pick who the variable is initialized for: e.g., `variableName[@a]`","initialize":"Alias of 'init'. Ensures this variable has a value, defaulting to 0 if not. This ensures the executing entity(s) function as intended all the time. Use clarifiers to pick who the variable is initialized for: e.g., `variableName[@a]`","kill":"Kills the given entities, causing the death animation, sounds, and particles to appear.","lang":"Sets the active lang file (examples: en_US, pt_BR). Once set, all text will automatically be localized into that lang file; including format-strings.","mc":"Places a plain command in the output file, used for when the language lacks a certain feature.","command":"Alias of 'mc'. Places a plain command in the output file, used for when the language lacks a certain feature.","cmd":"Alias of 'mc'. Places a plain command in the output file, used for when the language lacks a certain feature.","move":"Moves the specified entity in a direction (LEFT, RIGHT, UP, DOWN, FORWARD, BACKWARD) for a certain amount. Simpler alternative for teleporting using caret offsets.","particle":"Spawns a particle effect in the world.","playsound":"Plays a sound effect in the world, optionally with volume, pitch, and filtering specific players.","print":"Prints a chat message to the executing player, or to the given one if specified.","remove":"Teleports the given entities deep into the void, causing a silent death. Looking to rewrite this in the future to generate entity code for real removal.","repeat":"Repeats the proceeding statement/code-block the given number of times. This command always runs at runtime.","replace":"Replaces all source blocks with a result block in a specific region.","return":"Set the value that will be returned from this function when it ends. The caller can use this value however it wishes.","rotate":"Rotates the given entities a certain number of degrees horizontally and vertically from their current rotation.","say":"Send a plain-text message as the executing entity. Plain selectors can be used, but not variables.","scatter":"Randomly scatters blocks throughout a region with a certain percentage.","setblock":"Sets the block at a specific position, optionally using a replace mode.","summon":"Summons an entity; matches Minecraft vanilla syntax.","tag":"Add and remove tags from the given entity.","test":"Defines a test; requires 'tests' feature. Must be followed by a code-block that contains the test contents.","throw":"Throws an error, displaying it to the executing player(s). The code is halted immediately, so handle cleanup before calling throw.","title":"Displays a title on the screen of the executing player, or to the given one if specified. Can also be used to set the timings of the title.","tp":"Teleports the executing/given entities to a specific position, selector, \"name:type\" of entity, or name of another managed entity (e.g., dummy entities).","teleport":"Alias of 'tp'. Teleports the executing/given entities to a specific position, selector, \"name:type\" of entity, or name of another managed entity (e.g., dummy entities).","while":"Repeats the proceeding statement/code-block as long as a condition remains true.  Multiple comparisons can be chained using the keyword 'and', and comparisons can be inverted using the keyword 'not'"},"literals":{"formatting":{"style":"NONE","color":{"red":224,"green":193,"blue":255}},"true":"A boolean value representing true/yes.","false":"A boolean value representing false/no.","not":"Invert the following comparison.","and":"Includes on another comparison.","null":"No value. Goes to 0/false under all types.","~":"Relative to executor's position.","^":"Relative to executor's direction."},"types":{"formatting":{"style":"NONE","color":{"red":255,"green":128,"blue":128}},"int":"An integer, representing any whole value between -2147483648 to 2147483647.","decimal":"A decimal number with a pre-specified level of precision.","bool":"A true or false value. Displayed as whatever is set in the '_true' and '_false' preprocessor variables respectively.","time":"A value representing a number of ticks. Displayed as MM:SS.","struct":"A user-defined structure of multiple variables.","ppv":"A preprocessor variable that will be set on function call. Not currently supported as a variable/struct type.","global":"Makes a value global, never being assigned on an entity. Alternately used as a parameter for the 'async' attribute.","local":"Makes a value local (default). Alternately used as a parameter for the 'async' attribute.","extern":"Makes a function extern, meaning it was written outside of MCCompiled and can now be called as any other function.","export":"Marks a function for export, meaning it will be outputted regardless of if it is used or not.","bind":"Binds a value to a pre-defined MoLang query. See bindings.json.","auto":"Makes a function run every tick (via tick.json), or if specified, some other interval.","partial":"Makes a function partial, allowing it to be re-defined , appending to any previous code in it. When re-declaring a function, the partial attribute must be used in both.","async":"Makes the given function asynchronous, either locally (state is attached to an entity) or globally (state is global only)."},"comparisons":{"formatting":{"style":"NONE","color":{"red":217,"green":130,"blue":80}},"until":"Used in the 'await' command to wait UNTIL a condition is true.","count":"Compare the number of entities that match a selector.","any":"Check if any entities match a selector.","block":"Check for a block.","blocks":"Check for an area of blocks matching another.","positioned":"Position the next comparison."},"options":{"formatting":{"style":"NONE","color":{"red":215,"green":174,"blue":255}},"dummies":"Feature: Create dummy entity behavior/resource files and allow them to be spawned in the world.","autoinit":"Feature: Runs the initialization file automatically in new worlds, and every time a new build is compiled. Requires a check-function to be run every tick.","exploders":"Feature: Create exploder entity behavior/resource files and allow them to be created through the 'explode' command.","uninstall":"Feature: Create an function named 'uninstall' to remove all tags/scoreboards/etc made by this project.","tests":"Feature: Enables the ability to use the 'test' command, which creates tests that are run on '/function test'. Use the 'assert' command to test various parts of your code.","audiofiles":"Feature: Enables support for 'playsound' command to accept audio files.","up":"Used with the 'move' command. Goes up relative to where the entity is looking.","down":"Used with the 'move' command. Goes down relative to where the entity is looking.","left":"Used with the 'move' command. Goes left relative to where the entity is looking.","right":"Used with the 'move' command. Goes right relative to where the entity is looking.","forward":"Used with the 'move' command. Goes forward relative to where the entity is looking.","backward":"Used with the 'move' command. Goes backward relative to where the entity is looking.","ascending":"Used with the '$sort' command. Sorts with the lowest value first.","descending":"Used with the '$sort' command. Sorts with the highest value first.","survival":"Survival mode. (0)","creative":"Creative mode. (1)","adventure":"Adventure mode. (2)","spectator":"Spectator mode. (spectator)","removeall":"Used with the 'dummy' command. Subcommand, removes all dummies, optionally with the given tag.","times":"Specifies the fade-in/stay/fade-out times this text will show for.","subtitle":"Sets the subtitle for the next title shown.","destroy":"Destroy any existing blocks as if broken by a player.","replace":"Replace any existing blocks. Default option.","hollow":"Hollow the area, only filling the outer edges with the block. To keep inside contents, use 'outline'.","outline":"Outline the area, only filling the outer edges with the block. To remove inside contents, use 'hollow'.","keep":"Keep any existing blocks/items, and only fill where air is present.","new":"Create a new dialogue scene with the given name.","open":"Open an existing dialogue through the given NPC, for the given player(s).","change":"Change the dialogue that shows up when an NPC is interacted with (for specific players if specified)","lockinventory":"Lock the item in the player's inventory.","lockslot":"Lock the item in the slot which it is placed in.","canplaceon:":"Specifies a block the item can be placed on.","candestroy:":"Specifies a block the item can destroy.","enchant:":"Give a leveled enchantment to this item. No limits.","name:":"Item display name OR dialogue NPC name.","lore:":"Give the item a line of lore. Multiple of these can be used to add more lines.","author:":"If this item is a 'written_book', set the name of the author.","title:":"If this item is a 'written_book', set its title.","page:":"If this item is a 'written_book', add a page to it.  Multiple of these can be used to add more pages.","dye:":"If this item is a piece of leather armor, set its color to an RGB value.","text:":"The text, aka the contents of the dialogue.","button:":"Adds a button to the dialogue which runs code when clicked.","onOpen:":"Specifies the code to run every time this dialogue is opened.","onClose:":"Specifies the code to run every time this dialogue is closed.","align":"Execute subcommand: Runs aligned to the given axes.","anchored":"Execute subcommand: Runs anchored to the executing entities eyes or feet.","as":"Execute subcommand: Runs as the given entity(s).","at":"Execute subcommand: Runs at the given location or entity.","facing":"Teleport & Execute subcommand: Runs facing a certain position.","facing entity":"Execute subcommand: Runs facing a certain entity.","in":"Execute subcommand: Runs in a given dimension.","positioned":"Execute subcommand: Runs at a given position.","positioned as":"Execute subcommand: Runs at the position of the given entity.","rotated":"Execute subcommand: Runs at the given rotation.","rotated as":"Execute subcommand: Runs at the rotation of the given entity."}}}
