{
  "last_mc_version": "1.20.80",
  "bindings": {
    "query.blocking": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is blocking."
    },
    "query.health": {
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns the attached player's health.",
      "type": "int",
      "min": 0,
      "max": 20
    },
    "query.is_alive": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is alive."
    },
    "query.is_baby": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is a baby."
    },
    "query.is_breathing": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is breathing."
    },
    "query.is_carrying_block": {
      "type": "bool",
      "targets": [
        "enderman.json"
      ],
      "desc": "Runs on endermen. Returns if the attached enderman is carrying a block."
    },
    "query.is_charged": {
      "type": "bool",
      "targets": [
        "creeper.json"
      ],
      "desc": "Runs on creepers. Returns if the attached creeper is charged."
    },
    "query.is_chested": {
      "type": "bool",
      "targets": [
        "donkey.json"
      ],
      "desc": "Runs on donkeys. Returns if the attached donkey is chested."
    },
    "query.is_digging": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is digging."
    },
    "query.is_eating": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is eating."
    },
    "query.is_elder": {
      "type": "bool",
      "targets": [
        "guardian.json"
      ],
      "desc": "Runs on guardians. Returns if the attached guardian is an elder."
    },
    "query.is_emoting": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is emoting."
    },
    "query.is_gliding": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is gliding on an elytra."
    },
    "query.is_idling": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is idling."
    },
    "query.is_in_water": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is in water."
    },
    "query.is_in_water_or_rain": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is in water or rain."
    },
    "query.is_jumping": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is pressing the jump button."
    },
    "query.is_moving": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is moving."
    },
    "query.is_on_fire": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is on fire."
    },
    "query.is_on_ground": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is on the ground."
    },
    "query.is_sheared": {
      "type": "bool",
      "targets": [
        "sheep.json"
      ],
      "desc": "Runs on sheep. Returns if the sheep is sheared."
    },
    "query.is_sitting": {
      "type": "bool",
      "targets": [
        "fox.json",
        "wolf.json",
        "parrot.json"
      ],
      "desc": "Runs on wolves/dogs/parrots/foxes. Returns if the entity is sitting."
    },
    "query.is_sleeping": {
      "type": "bool",
      "targets": [
        "player.json",
        "fox.json"
      ],
      "desc": "Runs on players/foxes. Returns if the attached player (or fox) is sleeping."
    },
    "query.is_sneaking": {
      "type": "bool",
      "targets": [
        "player.json",
        "fox.json"
      ],
      "desc": "Runs on players. Returns if the attached player (or fox) is sneaking."
    },
    "query.is_sneezing": {
      "type": "bool",
      "targets": [
        "llama.json"
      ],
      "desc": "Runs on llamas. Returns if the llama is sneezing."
    },
    "query.is_sprinting": {
      "type": "bool",
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns if the attached player is sprinting."
    },
    "query.is_tamed": {
      "type": "bool",
      "targets": null,
      "desc": "Runs on the given entities. Returns if the entity is tamed."
    },
    "query.is_transforming": {
      "type": "bool",
      "targets": [
        "husk.json",
        "zombie.json"
      ],
      "desc": "Runs on zombies/husks. Returns if the entity is transforming to a drowned."
    },
    "query.moon_phase": {
      "type": "int",
      "min": 0,
      "max": 7,
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns the current phase of the moon, 0-7. 0 being full moon."
    },
    "query.sleep_rotation": {
      "type": "int",
      "min": 0,
      "max": 4,
      "targets": [
        "player.json"
      ],
      "desc": "Runs on players. Returns the direction of the bed they are sleeping on, or 0."
    }
  }
}